//	Copyright © 2010, EPSITEC SA, CH-1400 Yverdon-les-Bains, Switzerland
//	Author: Daniel ROUX, Maintainer: Daniel ROUX

using Epsitec.Common.Drawing;
using Epsitec.Common.Widgets;
using Epsitec.Common.Types;

using Epsitec.Cresus.Core;
using Epsitec.Cresus.Core.Entities;
using Epsitec.Cresus.Core.Controllers;
using Epsitec.Cresus.Core.Widgets;

using Epsitec.Cresus.Compta.Accessors;
using Epsitec.Cresus.Compta.Entities;

using System.Collections.Generic;
using System.Linq;

namespace Epsitec.Cresus.Compta.Controllers
{
	/// <summary>
	/// Ce contrôleur gère les options d'affichage du compte d'exploitation de la comptabilité.
	/// </summary>
	public class ExploitationOptionsController : AbstractOptionsController
	{
		public ExploitationOptionsController(ComptaEntity comptaEntity, ExploitationOptions options)
			: base (comptaEntity, options)
		{
		}


		public override void CreateUI(FrameBox parent, System.Action optionsChanged)
		{
			base.CreateUI (parent, optionsChanged);

			this.CreateCheckUI (this.mainFrame, optionsChanged);
		}

		protected void CreateCheckUI(FrameBox parent, System.Action optionsChanged)
		{
			var frame = new FrameBox
			{
				Parent          = parent,
				PreferredHeight = 20,
				Dock            = DockStyle.Top,
				TabIndex        = ++this.tabIndex,
			};

			var button = new CheckButton
			{
				Parent         = frame,
				FormattedText  = "Affiche les comptes dont le solde est nul",
				PreferredWidth = 300,
				ActiveState    = this.Options.ComptesNuls ? ActiveState.Yes : ActiveState.No,
				Dock           = DockStyle.Left,
				TabIndex       = ++this.tabIndex,
			};

			button.ActiveStateChanged += delegate
			{
				this.Options.ComptesNuls = !this.Options.ComptesNuls;
				button.ActiveState = this.Options.ComptesNuls ? ActiveState.Yes : ActiveState.No;
				optionsChanged ();
			};
		}

		private ExploitationOptions Options
		{
			get
			{
				return this.options as ExploitationOptions;
			}
		}
	}
}
