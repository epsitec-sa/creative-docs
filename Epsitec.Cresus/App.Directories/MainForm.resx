<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>